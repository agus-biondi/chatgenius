@startuml Message Management

skinparam backgroundColor white
skinparam handwritten false

actor "User" as User
participant "Frontend" as FE
participant "MessageController" as MC
participant "MessageService" as MS
participant "WebSocket" as WS
database "Database" as DB

== Send Message ==
User -> FE: Type Message
FE -> MC: POST /api/messages
activate MC
MC -> MS: createMessage()
MS -> DB: Save Message
DB --> MS: Message Saved
MS -> WS: Broadcast to Channel
WS --> FE: Real-time Update
MS --> MC: Success
MC --> FE: Confirmation
deactivate MC
FE --> User: Message Sent

== Thread Reply ==
User -> FE: Reply to Thread
FE -> MC: POST /api/messages\n(with parentMessageId)
activate MC
MC -> MS: createMessage()
MS -> DB: Save Reply
DB --> MS: Reply Saved
MS -> WS: Broadcast to Channel
WS --> FE: Real-time Update
MS --> MC: Success
MC --> FE: Confirmation
deactivate MC
FE --> User: Reply Sent

== Message Reactions ==
User -> FE: Add Reaction
FE -> MC: POST /api/messages/{id}/reactions
activate MC
MC -> MS: addReaction()
MS -> DB: Save Reaction
DB --> MS: Reaction Saved
MS -> WS: Broadcast Reaction
WS --> FE: Update Reactions
MS --> MC: Success
MC --> FE: Confirmation
deactivate MC
FE --> User: Reaction Added

== Message Search ==
User -> FE: Search Messages
FE -> MC: GET /api/messages/search
activate MC
MC -> MS: searchMessages()
MS -> DB: Full-text Search
DB --> MS: Search Results
MS --> MC: Page<MessageDto>
MC --> FE: Search Results
deactivate MC
FE --> User: Display Results

== Message Edit/Delete ==
User -> FE: Edit Message
FE -> MC: PUT /api/messages/{id}
activate MC
MC -> MS: updateMessage()
MS -> DB: Update Message
DB --> MS: Updated
MS -> WS: Broadcast Update
WS --> FE: Real-time Update
MS --> MC: Success
MC --> FE: Confirmation
deactivate MC
FE --> User: Edit Complete

== Load Thread ==
User -> FE: Open Thread
FE -> MC: GET /api/messages/thread/{parentId}
activate MC
MC -> MS: getThreadMessages()
MS -> DB: Query Thread
DB --> MS: Thread Messages
MS --> MC: Page<MessageDto>
MC --> FE: Thread Messages
deactivate MC
FE --> User: Display Thread

@enduml 