@startuml
actor User
participant Sidebar
participant CreateChannelModal
participant DeleteChannelModal
participant APIClient
participant ReactQuery
participant MainLayout
participant useChannelEvents
participant WebSocketManager




participant ChannelController
participant ChannelService
participant ChannelRepository
participant WebSocketEventHandler
participant SimpMessagingTemplate

==Channel Creation Flow==

User -> Sidebar: Opens Create Channel Modal
Sidebar -> CreateChannelModal: Render Modal
User -> CreateChannelModal: Enters channel name and submits
CreateChannelModal -> APIClient: POST /api/channels with channel data
APIClient -> ChannelController: Handle POST request
ChannelController -> ChannelService: createChannel(channelDTO, userId)
ChannelService -> ChannelRepository: Save new Channel
ChannelRepository --> ChannelService: Returns saved Channel
ChannelService --> ChannelController: Returns ChannelDTO
ChannelController --> APIClient: Response with ChannelDTO
APIClient --> CreateChannelModal: Success response
CreateChannelModal --> Sidebar: Close Modal
ChannelService -> WebSocketEventHandler: broadcastChannelCreated(channelDTO)
WebSocketEventHandler -> SimpMessagingTemplate: Send to /topic/channels/events
SimpMessagingTemplate -> WebSocketManager: Deliver channel created event
WebSocketManager -> useChannelEvents: Receive event
useChannelEvents -> MainLayout: onChannelsChange callback
MainLayout -> ReactQuery: invalidateQueries(['channels'])
ReactQuery -> Sidebar: Refetch channels data
Sidebar --> User: Display new channel in the list

==Channel Deletion Flow==

User -> Sidebar: Clicks Delete Channel Button
Sidebar -> DeleteChannelModal: Render Modal
User -> DeleteChannelModal: Confirms deletion
DeleteChannelModal -> APIClient: DELETE /api/channels/{channelId}
APIClient -> ChannelController: Handle DELETE request
ChannelController -> ChannelService: deleteChannel(channelId, userId)
ChannelService -> ChannelRepository: Delete Channel
ChannelRepository --> ChannelService: Deletion confirmed
ChannelService --> ChannelController: Returns success
ChannelController --> APIClient: Response with success
APIClient --> DeleteChannelModal: Success response
DeleteChannelModal --> Sidebar: Close Modal
ChannelService -> WebSocketEventHandler: broadcastChannelDeleted(channelId)
WebSocketEventHandler -> SimpMessagingTemplate: Send to /topic/channels/events
SimpMessagingTemplate -> WebSocketManager: Deliver channel deleted event
WebSocketManager -> useChannelEvents: Receive event
useChannelEvents -> MainLayout: onChannelsChange callback
MainLayout -> ReactQuery: invalidateQueries(['channels'])
ReactQuery -> Sidebar: Refetch channels data
Sidebar --> User: Remove channel from list

@enduml
